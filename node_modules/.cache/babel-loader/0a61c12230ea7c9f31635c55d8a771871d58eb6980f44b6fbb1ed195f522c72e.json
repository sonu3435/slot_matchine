{"ast":null,"code":"var _jsxFileName = \"/home/arun/Desktop/reactapp/jsxchallenge_slotmachine/src/App.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlotM = Prop => {\n  let x = 'ðŸ˜„';\n  let y = 'ðŸ˜„';\n  let z = 'ðŸ¥…';\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" All Are Maching \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Not Maching \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true);\n  }\n};\n_c = SlotM;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \\uD83C\\uDFB0 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Slot machine Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \\uD83C\\uDFB0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SlotM, {\n        x: \"ðŸ˜„\",\n        y: \"ðŸ˜„\",\n        z: \"ðŸ˜„\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SlotM, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlotM\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SlotM","Prop","x","y","z","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","style","fontWeight","_c2","$RefreshReg$"],"sources":["/home/arun/Desktop/reactapp/jsxchallenge_slotmachine/src/App.js"],"sourcesContent":["import React from \"react\";\n\n\nconst SlotM = (Prop) =>{\n\n  let x = 'ðŸ˜„'\n  let y = 'ðŸ˜„'\n  let z = 'ðŸ¥…'\n\n  if ( ( x === y) && (y === z) ){\n    return (\n      <>\n       <h1>{x} {y} {z}</h1>\n       <h2> All Are Maching </h2>\n      </>\n    )\n  }\n\n  else{\n    return (\n      <>\n       <h1>{x} {y} {z}</h1>\n       <h2> Not Maching </h2>\n      </>\n    )\n  }\n\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <>\n    <div>\n    <h1> ðŸŽ° <span style={{fontWeight:'bold'}}>Slot machine Game</span> ðŸŽ° </h1>\n     <SlotM x={\"ðŸ˜„\"} y={\"ðŸ˜„\"} z={\"ðŸ˜„\"} />\n     <hr/>\n     <SlotM/>\n     <hr/>\n     </div>\n     </>\n    );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1B,MAAMC,KAAK,GAAIC,IAAI,IAAI;EAErB,IAAIC,CAAC,GAAG,IAAI;EACZ,IAAIC,CAAC,GAAG,IAAI;EACZ,IAAIC,CAAC,GAAG,IAAI;EAEZ,IAAOF,CAAC,KAAKC,CAAC,IAAMA,CAAC,KAAKC,CAAE,EAAE;IAC5B,oBACEP,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACCR,OAAA;QAAAQ,QAAA,GAAKH,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBZ,OAAA;QAAAQ,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACzB,CAAC;EAEP,CAAC,MAEG;IACF,oBACEZ,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACCR,OAAA;QAAAQ,QAAA,GAAKH,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBZ,OAAA;QAAAQ,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACrB,CAAC;EAEP;AAGF,CAAC;AAAAC,EAAA,GAzBKV,KAAK;AA8BX,SAASW,GAAGA,CAAA,EAAG;EACb,oBACEd,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACAR,OAAA;MAAAQ,QAAA,gBACAR,OAAA;QAAAQ,QAAA,GAAI,gBAAI,eAAAR,OAAA;UAAMe,KAAK,EAAE;YAACC,UAAU,EAAC;UAAM,CAAE;UAAAR,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,kBAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1EZ,OAAA,CAACG,KAAK;QAACE,CAAC,EAAE,IAAK;QAACC,CAAC,EAAE,IAAK;QAACC,CAAC,EAAE;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCZ,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLZ,OAAA,CAACG,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACRZ,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACJ,CAAC;AAER;AAACK,GAAA,GAZQH,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}