{"ast":null,"code":"var _jsxFileName = \"/home/arun/Desktop/reactapp/jsxchallenge_slotmachine/src/SlotM.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlotM = Props => {\n  // let x = 'ðŸ˜„'\n  // let y = 'ðŸ˜„'\n  // let z = 'ðŸ¥…'\n\n  // object destructuring\n  let {\n    x,\n    y,\n    z\n  } = Props;\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" All Are Maching \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Not Maching \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true);\n  }\n};\n_c = SlotM;\nexport default SlotM;\nvar _c;\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SlotM","Props","x","y","z","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arun/Desktop/reactapp/jsxchallenge_slotmachine/src/SlotM.jsx"],"sourcesContent":["import React from \"react\";\n\nconst SlotM = (Props) =>{\n\n    // let x = 'ðŸ˜„'\n    // let y = 'ðŸ˜„'\n    // let z = 'ðŸ¥…'\n  \n    // object destructuring\n    let {x,y,z} = Props\n    if ( ( x === y) && (y === z) ){\n      return (\n        <>\n         <h1>{x} {y} {z}</h1>\n         <h2> All Are Maching </h2>\n        </>\n      )\n    }\n  \n    else{\n      return (\n        <>\n         <h1>{x} {y} {z}</h1>\n         <h2> Not Maching </h2>\n        </>\n      )\n    }\n  }\n\n  export default SlotM"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAIC,KAAK,IAAI;EAEpB;EACA;EACA;;EAEA;EACA,IAAI;IAACC,CAAC;IAACC,CAAC;IAACC;EAAC,CAAC,GAAGH,KAAK;EACnB,IAAOC,CAAC,KAAKC,CAAC,IAAMA,CAAC,KAAKC,CAAE,EAAE;IAC5B,oBACEP,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACCR,OAAA;QAAAQ,QAAA,GAAKH,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBZ,OAAA;QAAAQ,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACzB,CAAC;EAEP,CAAC,MAEG;IACF,oBACEZ,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACCR,OAAA;QAAAQ,QAAA,GAAKH,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBZ,OAAA;QAAAQ,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACrB,CAAC;EAEP;AACF,CAAC;AAAAC,EAAA,GAzBGV,KAAK;AA2BT,eAAeA,KAAK;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}